    public class Brodcaster{

        public byte[] buffer;
        public DatagramSocket socket;
        private int port=50005;

        AudioRecord recorder;

        private int sampleRate = 16000 ;
        private int channelConfig = AudioFormat.CHANNEL_CONFIGURATION_MONO;
        private int audioFormat = AudioFormat.ENCODING_PCM_16BIT;
        int minBufSize = AudioRecord.getMinBufferSize(sampleRate, channelConfig, audioFormat);
        private boolean status = true;

        public Brodcaster(){

        }
        public void connect(){
            try {
                udpSocket = new DatagramSocket(12340);
            }catch (Exception ex){
                Log.d("Error ", ex.toString());
            }

        }
        public void start() throws Exception{
            DatagramSocket socket = new DatagramSocket();
            byte[] buffer = new byte[minBufSize];

            DatagramPacket packet;

            recorder = new AudioRecord(MediaRecorder.AudioSource.MIC,sampleRate,channelConfig,audioFormat,minBufSize*10);
            recorder.startRecording();


            minBufSize = recorder.read(buffer, 0, buffer.length);
            packet = new DatagramPacket (buffer, buffer.length, InetAddress.getByName(streamIP), streamPort + 1);

            socket.send(packet);
            recorder.stop();
        }
        public void stop(){

        }

    }